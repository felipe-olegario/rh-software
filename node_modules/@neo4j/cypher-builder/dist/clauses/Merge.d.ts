import type { CypherEnvironment } from "../Environment";
import { Pattern } from "../pattern/Pattern";
import { Clause } from "./Clause";
import type { OnCreateParam } from "./sub-clauses/OnCreate";
import { WithReturn } from "./mixins/clauses/WithReturn";
import { WithSet } from "./mixins/sub-clauses/WithSet";
import type { NodeRef } from "../references/NodeRef";
import { WithPathAssign } from "./mixins/WithPathAssign";
import { WithDelete } from "./mixins/sub-clauses/WithDelete";
export interface Merge extends WithReturn, WithSet, WithPathAssign, WithDelete {
}
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/clauses/merge/)
 * @group Clauses
 */
export declare class Merge extends Clause {
    private pattern;
    private onCreateClause;
    constructor(pattern: NodeRef | Pattern);
    onCreate(...onCreateParams: OnCreateParam[]): this;
    /** @internal */
    getCypher(env: CypherEnvironment): string;
}
