"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.coerceNumber = exports.isTruthy = exports.createDriver = void 0;
const neo4j_driver_1 = __importDefault(require("neo4j-driver"));
const createDriver = (connection) => __awaiter(void 0, void 0, void 0, function* () {
    const driver = neo4j_driver_1.default.driver(`${connection.scheme}://${connection.host}:${connection.port}`, neo4j_driver_1.default.auth.basic(connection.username, connection.password), connection.config);
    yield driver.verifyConnectivity();
    return driver;
});
exports.createDriver = createDriver;
const isTruthy = (value) => {
    if (typeof value === 'boolean') {
        return value;
    }
    if (typeof value === 'string' && value === 'true') {
        return true;
    }
    return false;
};
exports.isTruthy = isTruthy;
const coerceNumber = (value) => {
    if (value !== undefined) {
        const coerced = parseInt(value);
        return Number.isNaN(coerced) ? undefined : coerced;
    }
    return undefined;
};
exports.coerceNumber = coerceNumber;
